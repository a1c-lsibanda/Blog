version: '3'

networks:
    laravel:

services:
    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        ports:
            - "8080:80"
        volumes:
            - ./src:/var/www/html
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - postgres
        networks:
                laravel:

    postgres:
        image: postgres:latest
        container_name: postgres_db
        restart: unless-stopped
        tty: true
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_DB=blog
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=passw0rd
            - POSTGRES_ROOT_PASSWORD=passw0rd
            - SERVICE_TAGS=dev
            - SERVICE_NAME=postgres
        networks:
            - laravel
        volumes:
            - ./postgres:/var/lib/pgsql
            - ./postgres/init:/docker-entrypoint-initdb.d

    php:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: php
        volumes:
            - ./src:/var/www/html
        ports:
            - "9000:9000"
        networks:
            - laravel

    composer:
        image: composer:latest
        container_name: composer
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        depends_on:
            - php
        networks:
            - laravel

    npm:
        image: node:13.7
        container_name:  npm
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']
        networks:
            - laravel

    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: artisan
        volumes:
            - ./src:/var/www/html
        depends_on:
            - postgres
        working_dir: /var/www/html
        entrypoint: ['/var/www/html/artisan']
        networks:
            - laravel

    nextjs:
        build:
            # The directory in which docker file is located for project
            context: ./frontend/Dockerfile
            # Dockerfile.dev specifys npm run dev in docker file
            dockerfile: Dockerfile
        restart: unless-stopped
        volumes:
            # Required to sync file changes
            - ./frontend:/usr/src/app
            # Required to no break node_modules
            - /usr/src/app/node_modules
            # Required for nextjs
            - /usr/src/app/.next
        ports:
        - 3000:3000
        networks:
            - laravel


